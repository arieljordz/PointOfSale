@model Point_of_Sale.Models.tbl_Sales
@{
    ViewData["Title"] = "Point Of Sale";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="padding-top: 60px;">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Point of Sale</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Point of Sale</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">

            <div class="card card-secondary">
                <div class="card-header">
                    <h3 class="card-title"><i class="fa fa-check-square-o pr-2"></i>Product Details</h3>
                </div>
                <div class="card-body">

                    <input type="hidden" name="UserId" value="@ViewBag.UserId" />

                    <div class="row pb-3 pt-3">
                        <div class="col-md-12">
                            <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                <table id="tbl_items" class="table table-bordered table-hover text-center table-sm" style="width:100%"></table>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="card-footer">
                </div>
            </div>

            <div class="row">

                <div class="col-md-8">
                    <div class="card card-secondary">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-cart-arrow-down pr-2"></i>Cart</h3>
                        </div>

                        <div class="card-body">
                            <div class="row pb-3 pt-3">
                                <div class="col-md-12">
                                    <div class="dataTables_wrapper table-responsive dt-bootstrap4">
                                        <table id="tbl_cart" class="table table-bordered table-hover text-center table-sm" style="width:100%"></table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card-footer">
                            <button type="submit" class="btn btn-success col-12" id="btn_checkout"><i class="fa fa-check-square-o pr-2"></i>Checkout</button>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card card-secondary" id="card_balance">
                        <div class="card-header">
                            <h3 class="card-title"><i class="fa fa-check-square-o pr-2"></i>Checkout</h3>
                        </div>
                        <div class="card-body">

                            <form id="form_checkout">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group row">
                                            <label class="col-sm-3 col-form-label label-control">Total Amount:</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">₱</span>
                                                    </div>
                                                    <input type="text" class="form-control text-right" name="TotalAmount" readonly="readonly" maxlength="6" placeholder="0.00" data-slots="0" data-accept="\d" size="6" oninput="ValidateDecimalInput(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group row">
                                            <label class="col-sm-3 col-form-label label-control">Total Tax:</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">₱</span>
                                                    </div>
                                                    <input type="text" class="form-control text-right" name="Tax" readonly="readonly" maxlength="6" placeholder="0.00" data-slots="0" data-accept="\d" size="6" oninput="ValidateDecimalInput(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group row">
                                            <label class="col-sm-3 col-form-label label-control">Paid Amount:</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">₱</span>
                                                    </div>
                                                    <input type="text" class="form-control text-right" name="AmountPaid" maxlength="6" placeholder="0.00" data-slots="0" data-accept="\d" size="6" oninput="ValidateDecimalInput(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group row">
                                            <label class="col-sm-3 col-form-label label-control">Discount:</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">₱</span>
                                                    </div>
                                                    <input type="text" class="form-control text-right" name="Discount" readonly="readonly" maxlength="6" placeholder="0.00" data-slots="0" data-accept="\d" size="6" oninput="ValidateDecimalInput(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group row mb-0">
                                            <label class="col-sm-3 col-form-label label-control">Balance:</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text">₱</span>
                                                    </div>
                                                    <input type="text" class="form-control text-right" name="Balance" readonly="readonly" maxlength="6" placeholder="0.00" data-slots="0" data-accept="\d" size="6" oninput="ValidateDecimalInput(this)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>

                        </div>

                        <div class="card-footer">
                            <button type="submit" class="btn btn-success col-12" id="btn_get_balance"><i class="fa fa-save pr-2"></i>Get Balance</button>
                        </div>
                    </div>
                </div>

            </div>


        </div><!--/. container-fluid -->
    </section>
    <!-- /.content -->
    <!-- Modal -->
    <div id="modal_quantity" class="modal fade" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-sm pt-5">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal_name"><i class="fa fa-cart-arrow-down pr-2"></i>Add to Cart</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>
                <form id="form_cart" novalidate="novalidate">

                    <div class="modal-body">
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.ProductId)
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelForModel("Description: ", new { @class = "label-control text-danger" })
                                    <label class="label-control text-primary" id="item_decription"></label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    @Html.LabelForModel("Available: ", new { @class = "label-control text-danger" })
                                    <label class="label-control text-primary" id="item_quantity"></label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-5">
                                @Html.LabelForModel("Quantity: ", new { @class = "label-control text-danger" })
                            </div>
                            <div class="col-7">
                                @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", type="number", min = "0" })
                                @Html.ValidationMessageFor(x => x.Quantity)
                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success float-right"><i class="fa fa-save pr-2"></i>Add</button>
                    </div>
                </form>
            </div>

        </div>
    </div>

    <!-- Modal -->
    <div id="modal_receipt" class="modal fade" role="dialog" data-backdrop="static">
        <div class="modal-dialog modal-sm pt-5">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal_name"><i class="fa fa-file-pdf-o pr-2"></i>Receipt</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>
                <form id="form_receipt" novalidate="novalidate">

                    <div class="modal-body">

                        <iframe src="" id="frame_receipt" width="100%" height="550px"></iframe>

                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success float-right"><i class="fa fa-print pr-2"></i>Print</button>
                    </div>
                </form>
            </div>

        </div>
    </div>

</div>
<!-- /.content-wrapper -->
@section Scripts
    {
    <script>
        $(document).ready(function () {
            var SalesId = 0;
            var date = GetDateNowMMDDYYYY();
            var UserId = $("[name='UserId']").val();

            LoadItems();
            function LoadItems() {
                $('#tbl_items').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: true,
                    paging: true,
                    //order: [[1, "asc"], [2, "asc"]],
                    //lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                    ajax: {
                        "url": "../Products/LoadItemDtls",
                        "type": "POST",
                        "datatype": "JSON",
                    },
                    columns:
                        [
                            { "data": "id", title: "", visible: false, searchable: false },
                            { "data": "description", title: "Description", sClass: "text-center", orderable: false },
                            { "data": "brand", title: "Brand", sClass: "text-center", orderable: false },
                            { "data": "supplier", title: "Supplier", sClass: "text-center", orderable: false },
                            {
                                "data": "quantity", title: "Quantity", sClass: 'text-center', "render": function (data) {
                                    if (data <= 10) {
                                        return '<div class="text-danger">' + data + '</div>';
                                    }
                                    else {
                                        return '<div>' + data + '</div>';
                                    }
                                }
                            },
                            { "data": "price", title: "Price", sClass: "text-center", orderable: false },
                            {
                                "data": "dateExpired", title: "Expiration Date", sClass: 'text-center', "render": function (data) {
                                    var date1 = new Date(data);
                                    var date2 = new Date(date);
                                    if (date1 <= date2) {
                                        return '<div class="text-danger">' + data + '</div>';
                                    }
                                    else {
                                        return '<div>' + data + '</div>';
                                    }
                                }
                            },
                        ]
                });

                $('#tbl_items tbody').off().on('dblclick', 'tr', function (e) {
                    e.preventDefault();
                    if (!$(this).hasClass("dtactive")) {
                        $(this).parent().find("tr").removeClass("dtactive");
                        $(this).addClass("dtactive");
                        $("#modal_quantity").modal("show");
                        $("[name='ProductId']").val(SelectedValue("tbl_items", "id"));
                        $("#item_decription").html(SelectedValue("tbl_items", "description"));
                        $("#item_quantity").html(SelectedValue("tbl_items", "quantity"));
                        $("[name='Quantity']").focus();
                    } else {
                        $(this).removeClass("dtactive");
                        $("#form_cart").trigger("reset");
                    }
                });

            }

            ValidateForm();
            function ValidateForm() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        AddToCart();
                    }
                });
                $('#form_cart').validate({
                    rules: {
                        Quantity: {
                            required: true
                        },
                    },
                    messages: {
                        Quantity: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            function AddToCart() {
                var Qty_input = $("[name='Quantity']").val();
                var Available = SelectedValue("tbl_items", "quantity");

                if (Qty_input <= Available) {
                    $.ajax({
                        url: "../PointOfSale/AddToCart",
                        type: 'POST',
                        data: ItemDetails(),
                        cache: false,
                        contentType: false,
                        processData: false,
                        success: function (res) {
                            if (res.success == true) {
                                $("#form_cart").trigger("reset");
                                UnselectRow("tbl_items", $("[name='ProductId']").val());
                                LoadCart();
                                $("[name='Id']").val(0);

                                $("#modal_quantity").modal("hide");
                            }
                            else {
                                Swal.fire("Error!", res.message, "error");
                            }
                        }
                    });

                }
                else {
                    Swal.fire("Warning!", "The quantity is not enough for the available item.", "warning");
                }
            }

            function ItemDetails() {
                var formData = new FormData();
                formData.append('Id', $("[name='Id']").val());
                formData.append('ProductId', $("[name='ProductId']").val());
                formData.append('Quantity', $("[name='Quantity']").val());
                formData.append('UserId', $("[name='UserId']").val());
                return formData;
            }

            LoadCart();
            function LoadCart() {
                $('#tbl_cart').DataTable({
                    destroy: true,
                    responsive: true,
                    processing: false,
                    search: true,
                    stateSave: true,
                    info: true,
                    searching: true,
                    paging: true,
                    //order: [[1, "asc"], [2, "asc"]],
                    //lengthMenu: [[5, 10, 20, -1], [5, 10, 20, "All"]],
                    ajax: {
                        "url": "../PointOfSale/LoadCart",
                        "type": "POST",
                        "datatype": "JSON",
                    },
                    drawCallback: function (settings) {
                        if (settings.json != undefined) {
                            var json = settings.json;
                            var Total = 0.00;

                            for (var i = 0; i < json.data.length; i++) {
                                Total = Total + parseFloat(json.data[i].price.replace(",", ""));
                            }
                            var TotalAmount = "";
                            if (Total != undefined) {
                                TotalAmount = (Total).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                                TotalAmountFormat('tbl_cart', TotalAmount, 2);
                            }
                        }
                    },
                    columns:
                        [
                            { "data": "description", title: "Description", sClass: "text-left", orderable: false },
                            { "data": "quantity", title: "Quantity", sClass: "text-center", orderable: false },
                            { "data": "price", title: "Price", sClass: "text-right", orderable: false },
                            {
                                "data": "id", title: "Action", render: function (data) {
                                    return "<button type='button' class='btn btn-xs btn-danger remove'><i class='fa fa-trash pr-2'></i>Remove</button>";
                                }
                            }
                        ]
                });

                $('#tbl_cart tbody').off().on('click', 'tr', function (e) {
                    e.preventDefault();
                    if (!$(e.target).is(".remove")) {
                        if (!$(this).hasClass("dtactive")) {
                            $(this).parent().find("tr").removeClass("dtactive");
                            $(this).addClass("dtactive");
                            SalesId = SelectedValue("tbl_cart", "id")
                        } else {
                            $(this).removeClass("dtactive");
                            SalesId = 0;
                        }
                    }
                });
            }

            $(document).on('click', '.remove', function () {
                if (SalesId != 0) {
                    Swal.fire({
                        text: "Do you want to delete this record?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#28a745',
                        cancelButtonColor: '#dc3545',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '../PointOfSale/RemoveItem?&Id=' + SalesId,
                                type: 'POST',
                                success: function (res) {
                                    if (res.success == true) {
                                        //Swal.fire('Deleted!', 'Record has been deleted.', 'success')
                                    } else {
                                        Swal.fire('Error!', res.message, 'error')
                                    }
                                    LoadCart();
                                }
                            });
                        }
                    })
                }
                else {
                    Swal.fire('Information!', 'Please select a record first.', 'info')
                }
            });

            $("#btn_checkout").click(function (e) {
                e.preventDefault();
                Swal.fire({
                    text: "Are you sure you want to proceed?",
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '../PointOfSale/Checkout?&UserId=' + UserId,
                            type: 'POST',
                            success: function (res) {
                                if (res.success == true) {
                                    $("[name='TotalAmount']").val(TextMoneyFormat(res.totalAmount));
                                    LoadItems();
                                } else {
                                    Swal.fire('Error!', res.message, 'error');
                                }
                                window.onload = function () {
                                    var card = document.getElementById('card_balance');
                                    $("[name='AmountPaid']").focus();
                                    card.focus();
                                };
                            }
                        });
                    }
                });
            });

            ValidateAmount();
            function ValidateAmount() {
                $.validator.setDefaults({
                    submitHandler: function () {
                        GetBalance();
                    }
                });
                $('#form_cart').validate({
                    rules: {
                        AmountPaid: {
                            required: true
                        },
                    },
                    messages: {
                        AmountPaid: {
                            required: "This field is required"
                        },
                    },
                    errorElement: 'span',
                    errorPlacement: function (error, element) {
                        error.addClass('invalid-feedback');
                        element.closest('.form-group').append(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        $(element).addClass('is-invalid');
                        console.log(element);
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        $(element).removeClass('is-invalid');
                        console.log(element);
                    }
                });
            }

            function AmountDetails() {
                var formData = new FormData();
                formData.append('UserId', $("[name='UserId']").val());
                formData.append('AmountPaid', $("[name='AmountPaid']").val());
                return formData;
            }

            function GetBalance() {
                $.ajax({
                    url: '../PointOfSale/GetBalance?&UserId=' + UserId + '&AmountPaid=' + $("[name='AmountPaid']").val(),
                    type: 'POST',
                    success: function (res) {
                        if (res.success == true) {
                            Swal.fire({
                                text: "Print receipt?",
                                icon: 'info',
                                showCancelButton: true,
                                confirmButtonColor: '#28a745',
                                cancelButtonColor: '#dc3545',
                                confirmButtonText: 'Yes'
                            }).then((result) => {
                                $("[name='Balance']").val(TextMoneyFormat(res.balance));
                                //console.log(res.reportPath);
                                LoadCart();
                                $("#form_checkout").trigger("reset");
                                if (result.isConfirmed) {
                                    var url = "../Reports/PreviewReceipt?&InvoiceId=" + res.invoiceId;
                                    ViewReport(url, "#frame_receipt", "#modal_receipt");
                                }
                            });

                        } else {
                            Swal.fire('Warning!', res.message, 'warning');
                        }
                    }
                });
            }

            $("#btn_get_balance").click(function (e) {
                e.preventDefault();
                GetBalance();
            });

        });

        ActiveMenu("#point_of_sale");

    </script>
}

